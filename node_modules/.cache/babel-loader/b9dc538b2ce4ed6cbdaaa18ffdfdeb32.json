{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/leo/Documents/GitHub/facerecognitionbrain/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/leo/Documents/GitHub/facerecognitionbrain/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/leo/Documents/GitHub/facerecognitionbrain/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/leo/Documents/GitHub/facerecognitionbrain/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Particles from'react-particles-js';import Clarifai from'clarifai';import FaceRecognition from'./components/FaceRecognition/FaceRecognition';import Navigation from'./components/Navigation/Navigation';import Signin from'./components/Signin/Signin';import Register from'./components/Register/Register';import Logo from'./components/Logo/Logo';import ImageLinkForm from'./components/ImageLinkForm/ImageLinkForm';import Rank from'./components/Rank/Rank';import'./App.css';import'tachyons';// This is my own api key\nvar app=new Clarifai.App({apiKey:'de0373b3e78b45f88765b4a36ec18e4b'});var particlesOptions2={particles:{number:{value:50,density:{enable:true,value_area:500}}}};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);// we need to create \"state\" to let the app knows what value the user entered\nfunction App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.loadUser=function(data){_this.setState({user:{id:data.id,name:data.name,email:data.email,// password: data.password,\nentries:data.entries,join:data.join}});};_this.calculateFaceLocation=function(data){var clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;var image=document.getElementById('inputimage');var width=Number(image.width);var height=Number(image.height);// console.log(width, height)\nreturn{leftCol:clarifaiFace.left_col*width,topRow:clarifaiFace.top_row*height,rightCol:width-clarifaiFace.right_col*width,bottomRow:height-clarifaiFace.bottom_row*height};};_this.displayFaceBox=function(box){_this.setState({faceBox:box});};_this.onInputChange=function(event){_this.setState({input:event.target.value});};_this.onButtonSubmit=function(){_this.setState({imageUrl:_this.state.input});app.models.predict(Clarifai.FACE_DETECT_MODEL,_this.state.input)// .then(response => console.log(response))\n.then(function(response){if(response){fetch('http://localhost:3000/image',{method:'put',headers:{'Content-Type':'application/json'},body:JSON.stringify({id:_this.state.user.id})}).then(function(response){return response.json();}).then(function(count){_this.setState(Object.assign(_this.state.user,{entries:count}));});}_this.displayFaceBox(_this.calculateFaceLocation(response));}).catch(function(err){return console.log(err);});};_this.onRouteChange=function(value){if(value==='signout'){_this.setState({isSignedIn:false});}else if(value==='youarein'){_this.setState({isSignedIn:true});}_this.setState({route:value});};_this.state={input:'',imageUrl:'',faceBox:{},//empty object\nroute:'signin',isSignedIn:false,user:{id:'',name:'',email:'',// password: '',\nentries:0,join:''}};return _this;}_createClass(App,[{key:\"render\",// onRouteBack = () => {\n//   this.setState({route: 'signin'});\n// }\nvalue:function render(){var _this$state=this.state,isSignedIn=_this$state.isSignedIn,imageUrl=_this$state.imageUrl,route=_this$state.route,faceBox=_this$state.faceBox;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Particles,{className:\"particles\",params:particlesOptions2}),/*#__PURE__*/_jsx(Navigation,{isSignedIn:isSignedIn,onRouteChange:this.onRouteChange}),route==='youarein'?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(Rank,{name:this.state.user.name,entries:this.state.user.entries}),/*#__PURE__*/_jsx(ImageLinkForm,{onInputChange:this.onInputChange,onButtonSubmit:this.onButtonSubmit}),/*#__PURE__*/_jsx(FaceRecognition,{faceBox:faceBox,imageUrl:imageUrl})]}):route==='signin'?/*#__PURE__*/_jsx(Signin,{loadUser:this.loadUser,onRouteChange:this.onRouteChange}):/*#__PURE__*/_jsx(Register,{loadUser:this.loadUser,onRouteChange:this.onRouteChange})]});}}]);return App;}(Component);export default App;// const particlesOptions = {\n//   particles: {\n//     line_linked: {\n//       shadow: {\n//         enable: true,\n//         color: \"#3CA9D1\",\n//         blur: 1\n//       }\n//     }\n//   }\n// }\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Particles className='particles'\n//         params={particlesOptions2} \n//       />\n//       <Navigation />\n//       <Logo />\n//       <Rank />\n//       <ImageLinkForm />\n//       {/* <FaceRecognition />} */}\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/leo/Documents/GitHub/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions2","particles","number","value","density","enable","value_area","loadUser","data","setState","user","id","name","email","entries","join","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","faceBox","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","onRouteChange","isSignedIn","route"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport 'tachyons';\n\n// This is my own api key\nconst app = new Clarifai.App({\n  apiKey: 'de0373b3e78b45f88765b4a36ec18e4b'\n });\n\nconst particlesOptions2 = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area:500\n      }\n    }\n  }\n}\n\n\n\nclass App extends Component {\n  // we need to create \"state\" to let the app knows what value the user entered\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      faceBox: {}, //empty object\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        // password: '',\n        entries: 0,\n        join: ''\n      }\n    };\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      // password: data.password,\n      entries: data.entries,\n      join: data.join\n    }})\n  }\n\n  // connect to the back-end\n  // componentDidMount() {\n  //   fetch('http://localhost:3000')\n  //     .then(response => response.json())\n  //     .then(console.log)\n  // }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    // console.log(width, height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({faceBox: box});\n  }\n\n  onInputChange = (event) => {\n   this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input\n        )\n      // .then(response => console.log(response))\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count }))\n          })\n        }  \n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err=>console.log(err));\n  }\n\n  onRouteChange = (value) => {\n    if (value === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (value === 'youarein') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: value});\n  }\n\n  // onRouteBack = () => {\n  //   this.setState({route: 'signin'});\n  // }\n\n  render() {\n    const { isSignedIn, imageUrl, route, faceBox} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions2} \n        />\n        <Navigation \n          isSignedIn={isSignedIn} \n          onRouteChange={this.onRouteChange} \n        />\n        { route === 'youarein'\n          ? <div>\n              <Logo />\n              <Rank \n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition\n                faceBox = {faceBox} \n                imageUrl = {imageUrl}\n              />\n            </div>\n          : (\n            route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n  \n}\n\n  \n\nexport default App;\n\n\n\n// const particlesOptions = {\n//   particles: {\n//     line_linked: {\n//       shadow: {\n//         enable: true,\n//         color: \"#3CA9D1\",\n//         blur: 1\n//       }\n//     }\n//   }\n// }\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Particles className='particles'\n//         params={particlesOptions2} \n//       />\n//       <Navigation />\n//       <Logo />\n//       <Rank />\n//       <ImageLinkForm />\n//       {/* <FaceRecognition />} */}\n//     </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}